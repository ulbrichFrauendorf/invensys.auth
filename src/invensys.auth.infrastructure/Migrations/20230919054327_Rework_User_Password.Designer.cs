// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using invensys.auth.infrastructure.Persistence;

#nullable disable

namespace invensys.auth.infrastructure.Migrations
{
    [DbContext(typeof(AuthenticationServerContext))]
    [Migration("20230919054327_Rework_User_Password")]
    partial class Rework_User_Password
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("invensys.auth.domain.AuthClient", b =>
                {
                    b.Property<string>("AuthClientId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("AllowedScopes")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SecretHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AuthClientId");

                    b.ToTable("AuthClients");
                });

            modelBuilder.Entity("invensys.auth.domain.AuthUser", b =>
                {
                    b.Property<string>("AuthUserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<byte[]>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("PasswordSalt")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AuthUserId");

                    b.ToTable("AuthUsers");
                });
#pragma warning restore 612, 618
        }
    }
}
